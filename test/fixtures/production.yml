---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: radiation-web
  namespace: default
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: radiation
        component: web
        layer: application
      name: radiation-web
    spec:
      containers:
        - name: radiation-web
          env:
            - name: RAILS_SERVE_STATIC_FILES
              value: "true"
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: PUMA_BIND
              value: "tcp://0.0.0.0:8080"
            - name: DD_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: radiation-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/radiation:production
          imagePullPolicy: Always
          ports:
            - name: radiation-http
              containerPort: 8080
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              memory: 1Gi
          readinessProbe:
            httpGet:
              port: radiation-http
              path: /robots.txt
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
        - name: radiation-nginx
          image: artsy/docker-nginx:1.14.2
          ports:
            - name: nginx-http
              containerPort: 80
            - name: nginx-https
              containerPort: 443
          readinessProbe:
            tcpSocket:
              port: nginx-http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5 && /usr/sbin/nginx -s quit"]
          env:
            - name: "NGINX_DEFAULT_CONF"
              valueFrom:
                configMapKeyRef:
                  name: nginx-config
                  key: default-smtp
          volumeMounts:
            - name: nginx-secrets
              mountPath: /etc/nginx/ssl
      volumes:
        - name: nginx-secrets
          secret:
            secretName: nginx-secrets
            defaultMode: 420
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: radiation-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: radiation-web
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: radiation
    component: web
    layer: application
  name: radiation-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ vars.artsyNetWildcardSSLCert }}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "10"
spec:
  ports:
    - port: 80
      protocol: TCP
      name: http
      targetPort: nginx-http
    - port: 443
      protocol: TCP
      name: https
      targetPort: nginx-http
  selector:
    app: radiation
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: radiation-sidekiq
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: radiation-sidekiq
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: radiation-sidekiq
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: radiation
        layer: application
        component: sidekiq
      name: radiation-sidekiq
      namespace: default
    spec:
      containers:
        - name: radiation-sidekiq
          env:
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: DD_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: radiation-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/radiation:production
          imagePullPolicy: Always
          args: ["bundle", "exec", "sidekiq"]
          livenessProbe:
            exec:
              command:
                - pgrep
                - -f
                - sidekiq
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            requests:
              cpu: "1"
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - background
